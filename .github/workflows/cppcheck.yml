name: Build, Test, and Static Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Install Build Essentials
    - name: Install GCC and Make
      run: sudo apt-get update && sudo apt-get install -y build-essential

    # Step 3: Install Cppcheck
    - name: Install Cppcheck
      run: sudo apt-get install -y cppcheck

    # Step 4: Initialize GoogleTest Submodule (If using submodule method)
    - name: Initialize GoogleTest Submodule
      run: git submodule update --init --recursive

    # Step 5: Run Cppcheck Static Analysis
    - name: Run Cppcheck Static Analysis
      run: |
        cppcheck --enable=all --inconclusive --std=c99 --check-library --platform=unix64 --suppress=missingIncludeSystem main.c

    # Step 6: Build the Project with AddressSanitizer
    - name: Build the Project with AddressSanitizer
      run: make asan

    # Step 7: Run Unit Tests
    - name: Run Unit Tests
      run: |
        make test

    # Step 8: Run the Main Program with AddressSanitizer
    - name: Run Main Program with AddressSanitizer
      run: ./my_program_asan

    # Step 9: Display Program Output
    - name: Display Program Output
      run: cat test_output.txt

    # Step 10: Check for Warnings in Program Output
    - name: Check for Warnings
      run: |
        if grep -q "Warning:" test_output.txt; then
          echo "Warnings found in output!"
          exit 1
        fi
